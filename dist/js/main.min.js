/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/jsModules/main/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/jsModules/main/index.js":
/*!*************************************!*\
  !*** ./src/jsModules/main/index.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_ieFix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/ieFix */ "./src/jsModules/main/modules/ieFix.js");
/* harmony import */ var _modules_ieFix__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_ieFix__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _modules_lazyload__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/lazyload */ "./src/jsModules/main/modules/lazyload.js");
/* harmony import */ var _modules_lazyload__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_modules_lazyload__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _modules_sliders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/sliders */ "./src/jsModules/main/modules/sliders.js");
/* harmony import */ var _modules_sliders__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_modules_sliders__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _modules_tickers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/tickers */ "./src/jsModules/main/modules/tickers.js");
/* harmony import */ var _modules_tickers__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modules_tickers__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/actions */ "./src/jsModules/main/modules/actions.js");
/* harmony import */ var _modules_actions__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_modules_actions__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _modules_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/scroll */ "./src/jsModules/main/modules/scroll.js");
/* harmony import */ var _modules_scroll__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_modules_scroll__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _modules_dynamic_adapt__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/dynamic_adapt */ "./src/jsModules/main/modules/dynamic_adapt.js");
/* harmony import */ var _modules_dynamic_adapt__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_modules_dynamic_adapt__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _modules_btn_effect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/btn-effect */ "./src/jsModules/main/modules/btn-effect.js");
/* harmony import */ var _modules_btn_effect__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_modules_btn_effect__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _modules_tabs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/tabs */ "./src/jsModules/main/modules/tabs.js");
/* harmony import */ var _modules_tabs__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_modules_tabs__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _modules_add_block__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/add-block */ "./src/jsModules/main/modules/add-block.js");
/* harmony import */ var _modules_add_block__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_modules_add_block__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _modules_canvas__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/canvas */ "./src/jsModules/main/modules/canvas.js");
/* harmony import */ var _modules_canvas__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_modules_canvas__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _modules_file_img_uploader__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/file-img-uploader */ "./src/jsModules/main/modules/file-img-uploader.js");
/* harmony import */ var _modules_file_img_uploader__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_modules_file_img_uploader__WEBPACK_IMPORTED_MODULE_11__);

 // слайдеры

 // // некоторые простые функции
// import './modules/script';
// // всплывающие подскази
// import './modules/tippy';
// // параллакс при скролле (бекграунды / блоки)
// import './modules/parallax-blocks';
// // цифры кувырок
// import './modules/number-flip';
// // бегущие строки

 // // заливка кнопки при ховере
// import './modules/btn-effect';
// // главные экраны наложение следующиего блока
// import './modules/scroll-magic';
// табы, спойлеры, бугрер, галерея, боди-лок

 // // форма, валидация
// import './modules/form';
// функции при скролле

 // // параллакс по движению мыши
// import './modules/mouse_parallax';
// // всплывающие окна (попап)
// import './modules/popups';
// // макса на ввод цифр в форму телефона
// import './modules/phone-mask/phone-mask';
// // полифилы
// import './modules/polyfills';
// // опрос
// import './modules/quiz';
// // динамический адаптив элементов (перенос в другое место на брейкпоинтах)

 // бтн-ховер







/***/ }),

/***/ "./src/jsModules/main/modules/actions.js":
/*!***********************************************!*\
  !*** ./src/jsModules/main/modules/actions.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var navHeader = document.querySelector('.header__nav');
var iconBurger = document.querySelector('.menu-burger');
var stepMenu = document.querySelector('.submenu__step-back');
var subMenu = document.querySelectorAll('.submenu > a');
var subList = document.querySelectorAll('.sublist__item > a');
var searchHeaderIcon = document.querySelector('.search-header__icon--trigger');
var unlock = true;

function bodyLockRemove(delay) {
  var body = document.querySelector('body');

  if (unlock) {
    var lockPadding = document.querySelectorAll('.js-lock-padding');
    setTimeout(function () {
      for (var index = 0; index < lockPadding.length; index++) {
        var el = lockPadding[index];
        el.style.paddingRight = '0px';
      }

      body.style.paddingRight = '0px';
      body.classList.remove('_lock');
    }, delay);
    unlock = false;
    setTimeout(function () {
      unlock = true;
    }, delay);
  }
}

function bodyLockAdd(delay) {
  var body = document.querySelector('body');

  if (unlock) {
    var lockPadding = document.querySelectorAll('.js-lock-padding');

    for (var index = 0; index < lockPadding.length; index++) {
      var el = lockPadding[index];
      el.style.paddingRight = "".concat(window.innerWidth - document.querySelector('.wrapper').offsetWidth, "px");
    }

    body.style.paddingRight = "".concat(window.innerWidth - document.querySelector('.wrapper').offsetWidth, "px");
    body.classList.add('_lock');
    unlock = false;
    setTimeout(function () {
      unlock = true;
    }, delay);
  }
}

function bodyLock(delay) {
  var body = document.querySelector('body');

  if (body.classList.contains('_lock')) {
    bodyLockRemove(delay);
  } else {
    bodyLockAdd(delay);
  }
}

function menuClose(delay) {
  var menuBody = document.querySelector('.menu-mobile');
  var headerBody = document.querySelector('.header__body');
  iconBurger.classList.remove('js-menu-open');
  menuBody.classList.remove('js-menu-open');
  headerBody.classList.remove('js-menu-open');
  bodyLockRemove(delay);
}

if (iconBurger != null) {
  var delay = 500;
  var menuBody = document.querySelector('.menu-mobile');
  var headerBody = document.querySelector('.header__body');
  iconBurger.addEventListener('click', function (e) {
    e.preventDefault();

    if (unlock) {
      bodyLock(delay);
      iconBurger.classList.toggle('js-menu-open');
      menuBody.classList.toggle('js-menu-open');
      headerBody.classList.toggle('js-menu-open');
    }
  });
  window.addEventListener('resize', function () {
    if (window.innerWidth > 1400) {
      menuClose();
    }
  });
}

function openSearchHeader(el) {
  navHeader.classList.add('js-nav-hidden');

  if (window.innerWidth > 700) {
    setTimeout(function () {
      el.parentNode.classList.add('js-search-open');
    }, 1000);
  } else {
    el.parentNode.classList.add('js-search-open');
  }
}

function closeSearchHeader(e) {
  if ((!e.target.closest('.search-header') || e.target.closest('.search-header__icon--close')) && searchHeaderIcon.parentNode.classList.contains('js-search-open')) {
    navHeader.classList.remove('js-nav-hidden');
    searchHeaderIcon.parentNode.classList.remove('js-search-open');
  }
}

if (searchHeaderIcon) {
  searchHeaderIcon.addEventListener('click', function () {
    openSearchHeader(searchHeaderIcon);
  });
  window.addEventListener('click', closeSearchHeader);
}

subMenu.forEach(function (el) {
  el.addEventListener('mouseover', function () {
    el.parentNode.classList.add('js-submenu-open');

    if (el.parentNode.classList.contains('header__user') || el.classList.contains('_spoller') && !el.classList.contains('_init')) {
      menuClose();
    } else if (el.parentNode.classList.contains('submenu--big')) {
      var sublistItem = document.querySelector('.submenu--big .sublist__item');
      sublistItem.classList.add('js-sublist-open');
    }
  });
  el.parentNode.addEventListener('mouseleave', function () {
    el.parentNode.classList.remove('js-submenu-open');
  });
});
subList.forEach(function (el) {
  el.addEventListener('mouseover', function () {
    el.parentNode.classList.add('js-sublist-open');
  });
  el.parentNode.addEventListener('mouseleave', function () {
    el.parentNode.classList.remove('js-sublist-open');
  });
});

if (stepMenu) {
  var stepMenuParent = stepMenu.closest('.submenu--big');
  stepMenu.addEventListener('click', function () {
    if (stepMenuParent.classList.contains('js-submenu-open')) {
      stepMenuParent.classList.remove('js-submenu-open');
    }
  });
}

function scrollHeader() {
  var srcValue = window.pageYOffset;
  var header = document.querySelector('.header__wrapper');

  if (header !== null) {
    if (srcValue > 100) {
      header.classList.add('js-header-scroll');
    } else {
      header.classList.remove('js-header-scroll');
    }
  }
}

window.addEventListener('scroll', scrollHeader);
var spollers = document.querySelectorAll("._spoller");
var spollersGo = true;

var slideUp = function slideUp(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
  target.style.transitionProperty = 'height, margin, padding';
  target.style.transitionDuration = duration + 'ms';
  target.style.height = target.offsetHeight + 'px';
  target.offsetHeight;
  target.style.overflow = 'hidden';
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  window.setTimeout(function () {
    target.style.display = 'none';
    target.style.removeProperty('height');
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    target.style.removeProperty('overflow');
    target.style.removeProperty('transition-duration');
    target.style.removeProperty('transition-property');
    target.classList.remove('_slide');
  }, duration);
};

var slideDown = function slideDown(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;
  target.style.removeProperty('display');
  var display = window.getComputedStyle(target).display;
  if (display === 'none') display = 'block';
  target.style.display = display;
  var height = target.offsetHeight;
  target.style.overflow = 'hidden';
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  target.offsetHeight;
  target.style.transitionProperty = "height, margin, padding";
  target.style.transitionDuration = duration + 'ms';
  target.style.height = height + 'px';
  target.style.removeProperty('padding-top');
  target.style.removeProperty('padding-bottom');
  target.style.removeProperty('margin-top');
  target.style.removeProperty('margin-bottom');
  window.setTimeout(function () {
    target.style.removeProperty('height');
    target.style.removeProperty('overflow');
    target.style.removeProperty('transition-duration');
    target.style.removeProperty('transition-property');
    target.classList.remove('_slide');
  }, duration);
};

var slideToggle = function slideToggle(target) {
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;

  if (!target.classList.contains('_slide')) {
    target.classList.add('_slide');

    if (window.getComputedStyle(target).display === 'none') {
      return slideDown(target, duration);
    } else {
      return slideUp(target, duration);
    }
  }
};

if (spollers.length > 0) {
  var spollerCLick = function spollerCLick(e) {
    e.preventDefault();
    var spoller = e.target;

    if (spollersGo) {
      spollersGo = false;

      if (spoller.closest('._spollers').classList.contains('_one')) {
        var curentSpollers = spoller.closest('._spollers').querySelectorAll('._spoller');

        for (var i = 0; i < curentSpollers.length; i++) {
          var el = curentSpollers[i];

          if (el != spoller) {
            el.classList.remove('_active');
            slideUp(el.nextElementSibling);
          }
        }
      }

      spoller.classList.toggle('_active');
      slideToggle(spoller.nextElementSibling);
      setTimeout(function () {
        spollersGo = true;
      }, 500);
    }
  };

  var spollersInit = function spollersInit() {
    for (var index = 0; index < spollers.length; index++) {
      var spoller = spollers[index];
      var spollerMax = spoller.getAttribute('data-max');

      if (spollerMax && window.innerWidth > spollerMax) {
        if (spoller.classList.contains('_init')) {
          spoller.classList.remove('_active');
          spoller.classList.remove('_init');
          spoller.nextElementSibling.style.cssText = '';
          spoller.removeEventListener("click", spollerCLick);
        }
      } else if (!spoller.classList.contains('_init')) {
        spoller.classList.add('_init');
        spoller.addEventListener("click", spollerCLick);
      }
    }
  };

  var spollersShowActive = function spollersShowActive() {
    for (var index = 0; index < spollers.length; index++) {
      var spoller = spollers[index];

      if (spoller.classList.contains('_active')) {
        slideToggle(spoller.nextElementSibling);
      }
    }
  };

  window.addEventListener("resize", spollersInit);
  setTimeout(function () {
    spollersShowActive();
    spollersInit();
  }, 0);
}

/***/ }),

/***/ "./src/jsModules/main/modules/add-block.js":
/*!*************************************************!*\
  !*** ./src/jsModules/main/modules/add-block.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var fluWrappers = document.querySelectorAll('.flu__wrapper');

var _loop = function _loop(index) {
  var fluWrapper = fluWrappers[index];
  var btnAddBlock = fluWrapper.querySelector('.flu__add');
  var fluRow = fluWrapper.querySelector('.flu__row');
  var fluRows = fluWrapper.querySelector('.flu__rows');
  var cloneRow = fluRow.cloneNode(true);
  btnAddBlock.addEventListener('click', function () {
    fluRows.append(cloneRow);
  });
};

for (var index = 0; index < fluWrappers.length; index++) {
  _loop(index);
}

/***/ }),

/***/ "./src/jsModules/main/modules/btn-effect.js":
/*!**************************************************!*\
  !*** ./src/jsModules/main/modules/btn-effect.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function () {
  var buttons = document.querySelectorAll("._btn");
  buttons.forEach(function (button) {
    ["mouseenter", "mouseout"].forEach(function (evt) {
      button.addEventListener(evt, function (e) {
        var parentOffset = button.getBoundingClientRect(),
            relX = e.pageX - parentOffset.left,
            relY = e.clientY - parentOffset.top;
        var span = button.getElementsByTagName("span");

        if (span) {
          span[0].style.top = relY + "px";
          span[0].style.left = relX + "px";
        }
      });
    });
  });
})();

/***/ }),

/***/ "./src/jsModules/main/modules/canvas.js":
/*!**********************************************!*\
  !*** ./src/jsModules/main/modules/canvas.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// var sun = new Image();
// var moon = new Image();
// var earth = new Image();
// function init(){
//   sun.src = 'https://mdn.mozillademos.org/files/1456/Canvas_sun.png';
//   moon.src = 'https://mdn.mozillademos.org/files/1443/Canvas_moon.png';
//   earth.src = 'https://mdn.mozillademos.org/files/1429/Canvas_earth.png';
//   window.requestAnimationFrame(draw);
// }
// function draw() {
//   var ctx = document.getElementById('canvas').getContext('2d');
//   ctx.globalCompositeOperation = 'destination-over';
//   ctx.clearRect(0,0,300,300); // clear canvas
//   ctx.fillStyle = 'rgba(0,0,0,0.4)';
//   ctx.strokeStyle = 'rgba(0,153,255,0.4)';
//   ctx.save();
//   ctx.translate(150,150);
//   // Earth
//   var time = new Date();
//   ctx.rotate( ((2*Math.PI)/60)*time.getSeconds() + ((2*Math.PI)/60000)*time.getMilliseconds() );
//   ctx.translate(105,0);
//   ctx.fillRect(0,-12,50,24); // Shadow
//   ctx.drawImage(earth,-12,-12);
//   // Moon
//   ctx.save();
//   ctx.rotate( ((2*Math.PI)/6)*time.getSeconds() + ((2*Math.PI)/6000)*time.getMilliseconds() );
//   ctx.translate(0,28.5);
//   ctx.drawImage(moon,-3.5,-3.5);
//   ctx.restore();
//   ctx.restore();
//   ctx.beginPath();
//   ctx.arc(150,150,105,0,Math.PI*2,false); // Earth orbit
//   ctx.stroke();
//   ctx.drawImage(sun,0,0,300,300);
//   window.requestAnimationFrame(draw);
// }
// init();

/***/ }),

/***/ "./src/jsModules/main/modules/dynamic_adapt.js":
/*!*****************************************************!*\
  !*** ./src/jsModules/main/modules/dynamic_adapt.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Dynamic Adapt v.1
// HTML data-da="where(uniq class name),when(breakpoint),position(digi)"
// e.x. data-da=".item,992,2"
// Andrikanych Yevhen 2020
// https://www.youtube.com/c/freelancerlifestyle


function DynamicAdapt(type) {
  this.type = type;
}

DynamicAdapt.prototype.init = function () {
  var _this2 = this;

  var _this = this; // массив объектов


  this.оbjects = [];
  this.daClassname = "_dynamic_adapt_"; // массив DOM-элементов

  this.nodes = document.querySelectorAll("[data-da]"); // наполнение оbjects объктами

  for (var i = 0; i < this.nodes.length; i++) {
    var node = this.nodes[i];
    var data = node.dataset.da.trim();
    var dataArray = data.split(",");
    var оbject = {};
    оbject.element = node;
    оbject.parent = node.parentNode;
    оbject.destination = document.querySelector(dataArray[0].trim());
    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : "767";
    оbject.place = dataArray[2] ? dataArray[2].trim() : "last";
    оbject.index = this.indexInParent(оbject.parent, оbject.element);
    this.оbjects.push(оbject);
  }

  this.arraySort(this.оbjects); // массив уникальных медиа-запросов

  this.mediaQueries = Array.prototype.map.call(this.оbjects, function (item) {
    return '(' + this.type + "-width: " + item.breakpoint + "px)," + item.breakpoint;
  }, this);
  this.mediaQueries = Array.prototype.filter.call(this.mediaQueries, function (item, index, self) {
    return Array.prototype.indexOf.call(self, item) === index;
  }); // навешивание слушателя на медиа-запрос
  // и вызов обработчика при первом запуске

  var _loop = function _loop(_i) {
    var media = _this2.mediaQueries[_i];
    var mediaSplit = String.prototype.split.call(media, ',');
    var matchMedia = window.matchMedia(mediaSplit[0]);
    var mediaBreakpoint = mediaSplit[1]; // массив объектов с подходящим брейкпоинтом

    var оbjectsFilter = Array.prototype.filter.call(_this2.оbjects, function (item) {
      return item.breakpoint === mediaBreakpoint;
    });
    matchMedia.addListener(function () {
      _this.mediaHandler(matchMedia, оbjectsFilter);
    });

    _this2.mediaHandler(matchMedia, оbjectsFilter);
  };

  for (var _i = 0; _i < this.mediaQueries.length; _i++) {
    _loop(_i);
  }
};

DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {
  if (matchMedia.matches) {
    for (var i = 0; i < оbjects.length; i++) {
      var оbject = оbjects[i];
      оbject.index = this.indexInParent(оbject.parent, оbject.element);
      this.moveTo(оbject.place, оbject.element, оbject.destination);
    }
  } else {
    for (var _i2 = 0; _i2 < оbjects.length; _i2++) {
      var _оbject = оbjects[_i2];

      if (_оbject.element.classList.contains(this.daClassname)) {
        this.moveBack(_оbject.parent, _оbject.element, _оbject.index);
      }
    }
  }
}; // Функция перемещения


DynamicAdapt.prototype.moveTo = function (place, element, destination) {
  element.classList.add(this.daClassname);

  if (place === 'last' || place >= destination.children.length) {
    destination.insertAdjacentElement('beforeend', element);
    return;
  }

  if (place === 'first') {
    destination.insertAdjacentElement('afterbegin', element);
    return;
  }

  destination.children[place].insertAdjacentElement('beforebegin', element);
}; // Функция возврата


DynamicAdapt.prototype.moveBack = function (parent, element, index) {
  element.classList.remove(this.daClassname);

  if (parent.children[index] !== undefined) {
    parent.children[index].insertAdjacentElement('beforebegin', element);
  } else {
    parent.insertAdjacentElement('beforeend', element);
  }
}; // Функция получения индекса внутри родителя


DynamicAdapt.prototype.indexInParent = function (parent, element) {
  var array = Array.prototype.slice.call(parent.children);
  return Array.prototype.indexOf.call(array, element);
}; // Функция сортировки массива по breakpoint и place 
// по возрастанию для this.type = min
// по убыванию для this.type = max


DynamicAdapt.prototype.arraySort = function (arr) {
  if (this.type === "min") {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return -1;
        }

        if (a.place === "last" || b.place === "first") {
          return 1;
        }

        return a.place - b.place;
      }

      return a.breakpoint - b.breakpoint;
    });
  } else {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return 1;
        }

        if (a.place === "last" || b.place === "first") {
          return -1;
        }

        return b.place - a.place;
      }

      return b.breakpoint - a.breakpoint;
    });
    return;
  }
};

var da = new DynamicAdapt("max");
da.init();

/***/ }),

/***/ "./src/jsModules/main/modules/file-img-uploader.js":
/*!*********************************************************!*\
  !*** ./src/jsModules/main/modules/file-img-uploader.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// import showTooltipMini from './tooltips-mini';
var FilesUploader = /*#__PURE__*/function () {
  function FilesUploader(filesContainer) {
    _classCallCheck(this, FilesUploader);

    this.filesContainer = filesContainer;
    this.previews = filesContainer.querySelector('.files-img-uploader__previews');
    this.errorMessage = this.filesContainer.getAttribute('data-error-massage');
    this.maxFiles = this.filesContainer.getAttribute('data-max-files');
    this.input = filesContainer.querySelector('input');
    this.placeholder = filesContainer.querySelector('.form-input__placeholder span');
    this.files = [];
    this.init();
  }

  _createClass(FilesUploader, [{
    key: "getFilelist",
    value: function getFilelist() {
      var fileList = new DataTransfer();
      this.files.forEach(function (file) {
        fileList.items.add(file);
      });
      return fileList.files;
    }
  }, {
    key: "addEvents",
    value: function addEvents() {
      var _this = this;

      this.input.addEventListener('change', function () {
        var _this$files;

        (_this$files = _this.files).push.apply(_this$files, _toConsumableArray(_this.input.files));

        _this.updatePreview();

        _this.updateInputValue();
      });
    }
  }, {
    key: "updateInputValue",
    value: function updateInputValue() {
      this.input.value = '';
      this.input.files = this.getFilelist();
      this.input.customFiles = this.files; // if (this.input.value === '') {
      //   this.input.closest('label').classList.remove('js-move-label--active');
      // }

      if (this.maxFiles) {
        if (this.input.files.length >= this.maxFiles) {
          this.filesContainer.classList.add('max'); // showTooltipMini(`${this.errorMessage}`);
        } else {
          this.filesContainer.classList.remove('max');
        }
      }
    }
  }, {
    key: "updatePreview",
    value: function updatePreview() {
      var _this2 = this;

      this.previews.innerHTML = '';
      this.files.forEach(function (file) {
        var url = URL.createObjectURL(file);

        _this2.previews.insertAdjacentHTML('beforeend', "\n              <div class=\"files-img-uploader__preview\">\n                <div class=\"files-img-uploader__preview-close\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#AD0C10\"/>\n                    <path d=\"M8 7.11125L10.6669 4.44437C10.9123 4.19895 11.3102 4.19895 11.5556 4.44437C11.801 4.6898 11.801 5.0877 11.5556 5.33312L8.88875 8L11.5556 10.6669C11.801 10.9123 11.801 11.3102 11.5556 11.5556C11.3102 11.801 10.9123 11.801 10.6669 11.5556L8 8.88875L5.33312 11.5556C5.0877 11.801 4.6898 11.801 4.44437 11.5556C4.19895 11.3102 4.19895 10.9123 4.44437 10.6669L7.11125 8L4.44437 5.33312C4.19895 5.0877 4.19895 4.6898 4.44437 4.44437C4.6898 4.19895 5.0877 4.19895 5.33312 4.44437L8 7.11125Z\" fill=\"white\"/>\n                  </svg>\n                </div>\n                <img src=\"".concat(url, "\" alt=\"\">\n              </div>\n            "));
      });
      var previews = this.previews.querySelectorAll('.files-img-uploader__preview');
      previews.forEach(function (preview, index) {
        _this2.addEventRemoveFile(preview, index);
      });
    }
  }, {
    key: "removeFile",
    value: function removeFile(index) {
      this.files.splice(index, 1);
      this.updateInputValue();
      this.updatePreview();
    }
  }, {
    key: "addEventRemoveFile",
    value: function addEventRemoveFile(preview, index) {
      var _this3 = this;

      var closeButton = preview.querySelector('.files-img-uploader__preview-close');
      closeButton.addEventListener('click', function () {
        _this3.removeFile(index);
      });
    }
  }, {
    key: "init",
    value: function init() {
      this.addEvents();
    }
  }]);

  return FilesUploader;
}();

var filesUploaders = document.querySelectorAll('.files-img-uploader');
filesUploaders.forEach(function (filesUploader) {
  new FilesUploader(filesUploader);
});

/***/ }),

/***/ "./src/jsModules/main/modules/ieFix.js":
/*!*********************************************!*\
  !*** ./src/jsModules/main/modules/ieFix.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function getInternetExplorerVersion() {
  var rv = -1;

  if (navigator.appName == 'Microsoft Internet Explorer') {
    var ua = navigator.userAgent;
    var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
    if (re.exec(ua) != null) rv = parseFloat(RegExp.$1);
  } else if (navigator.appName == 'Netscape') {
    var ua = navigator.userAgent;
    var re = new RegExp("Trident/.*rv:([0-9]{1,}[\.0-9]{0,})");
    if (re.exec(ua) != null) rv = parseFloat(RegExp.$1);
  }

  return rv;
}

if (getInternetExplorerVersion() !== -1) {
  // In IE
  document.querySelectorAll('html')[0].classList.add('ie-fix');
}

window.getInternetExplorerVersion = getInternetExplorerVersion;

/***/ }),

/***/ "./src/jsModules/main/modules/lazyload.js":
/*!************************************************!*\
  !*** ./src/jsModules/main/modules/lazyload.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

window.lazySizesConfig = window.lazySizesConfig || {};
window.lazySizesConfig.expand = 200; //default 360-500

lazySizesConfig.expFactor = 1.5; //default: 1.7

/***/ }),

/***/ "./src/jsModules/main/modules/scroll.js":
/*!**********************************************!*\
  !*** ./src/jsModules/main/modules/scroll.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var scr_body = document.querySelector('body');
var scr_blocks = document.querySelectorAll('._scr-sector');
var scr_items = document.querySelectorAll('._scr-item');
var scr_fix_block = document.querySelectorAll('._side-wrapper');
var scr_min_height = 750;
var scrolling = true;
var scrolling_full = true;
var scrollDirection = 0;
var currentScroll; // доработка скролла для скроллмеджик

var blockScroll = document.querySelector('.block-scroll');

if (blockScroll) {
  var funcBlockScroll = function funcBlockScroll() {
    var header = document.querySelector('header.header');
    var blockScrollScroll = blockScroll.scrollTop;

    if (blockScrollScroll > 0) {
      header.classList.add('_scroll');
    } else {
      header.classList.remove('_scroll');
    }
  };

  blockScroll.addEventListener('scroll', funcBlockScroll);
} // доработка скролла для скроллмеджик
//ScrollOnScroll


window.addEventListener('scroll', scroll_scroll);

function scroll_scroll() {
  var src_value = currentScroll = pageYOffset;
  var header = document.querySelector('header.header');

  if (header !== null) {
    if (src_value > 100 && window.innerWidth >= 480) {
      header.classList.add('_scroll');
    } else if (src_value > 10 && window.innerWidth < 480) {
      header.classList.add('_scroll');
    } else {
      header.classList.remove('_scroll');
    }
  }

  if (scr_blocks.length > 0) {
    for (var index = 0; index < scr_blocks.length; index++) {
      var block = scr_blocks[index];
      var block_offset = offset(block).top;
      var block_height = block.offsetHeight;

      if (pageYOffset > block_offset - window.innerHeight / 1.5 && pageYOffset < block_offset + block_height - window.innerHeight / 5) {
        block.classList.add('_scr-sector_active');
      } else {
        if (block.classList.contains('_scr-sector_active')) {
          block.classList.remove('_scr-sector_active');
        }
      }

      if (pageYOffset > block_offset - window.innerHeight / 2 && pageYOffset < block_offset + block_height - window.innerHeight / 5) {
        if (!block.classList.contains('_scr-sector_current')) {
          block.classList.add('_scr-sector_current');
        }
      } else {
        if (block.classList.contains('_scr-sector_current')) {
          block.classList.remove('_scr-sector_current');
        }
      }
    }
  }

  if (scr_items.length > 0) {
    for (var _index = 0; _index < scr_items.length; _index++) {
      var scr_item = scr_items[_index];
      var scr_item_offset = offset(scr_item).top;
      var scr_item_height = scr_item.offsetHeight;
      var scr_item_point = window.innerHeight - (window.innerHeight - scr_item_height / 3);

      if (window.innerHeight > scr_item_height) {
        scr_item_point = window.innerHeight - scr_item_height / 3;
      }

      if (src_value > scr_item_offset - scr_item_point && src_value < scr_item_offset + scr_item_height) {
        scr_item.classList.add('_active'); // scroll_load_item(scr_item);
      } else {// scr_item.classList.remove('_active');
      }
    }
  }

  if (scr_fix_block.length > 0) {
    fix_block(scr_fix_block, src_value);
  }

  var custom_scroll_line = document.querySelector('._custom-scroll__line');

  if (custom_scroll_line) {
    var window_height = window.innerHeight;
    var content_height = document.querySelector('.wrapper').offsetHeight;
    var scr_procent = pageYOffset / (content_height - window_height) * 100;
    var custom_scroll_line_height = custom_scroll_line.offsetHeight;
    custom_scroll_line.style.transform = "translateY(" + (window_height - custom_scroll_line_height) / 100 * scr_procent + "px)";
  }

  if (src_value > scrollDirection) {// downscroll code
  } else {// upscroll code
  }

  scrollDirection = src_value <= 0 ? 0 : src_value;
}

setTimeout(function () {
  //document.addEventListener("DOMContentLoaded", scroll_scroll);
  scroll_scroll();
}, 100);

function getPrevBlockPos(current_block_prev) {
  var viewport_height = window.innerHeight;
  var current_block_prev_height = current_block_prev.offsetHeight;
  var block_pos = offset(current_block_prev).top;

  if (current_block_prev_height >= viewport_height) {
    block_pos = block_pos + (current_block_prev_height - viewport_height);
  }

  return block_pos;
} //ScrollOnClick (Navigation)


var link = document.querySelectorAll('._goto-block');

if (link) {
  var blocks = [];

  var _loop = function _loop(index) {
    var el = link[index];
    var block_name = el.getAttribute('href').replace('#', '');

    if (block_name != '' && !~blocks.indexOf(block_name)) {
      blocks.push(block_name);
    }

    el.addEventListener('click', function (e) {
      if (document.querySelector('.menu__body._active')) {
        menu_close();
        body_lock_remove(500);
      }

      var target_block_class = el.getAttribute('href').replace('#', '');
      var target_block = document.querySelector('.' + target_block_class);

      _goto(target_block, 300);

      e.preventDefault();
    });
  };

  for (var index = 0; index < link.length; index++) {
    _loop(index);
  }
} //ScrollOnClick (Simple)


var goto_links = document.querySelectorAll('._goto');

if (goto_links) {
  var _loop2 = function _loop2(_index2) {
    var goto_link = goto_links[_index2];
    goto_link.addEventListener('click', function (e) {
      var target_block_class = goto_link.getAttribute('href').replace('#', '');
      var target_block = document.querySelector('.' + target_block_class);

      _goto(target_block, 300);

      e.preventDefault();
    });
  };

  for (var _index2 = 0; _index2 < goto_links.length; _index2++) {
    _loop2(_index2);
  }
}

function _goto(target_block, speed) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var header = ''; //OffsetHeader
  //if (window.innerWidth < 992) {
  //	header = 'header';
  //}

  var options = {
    speedAsDuration: true,
    speed: speed,
    header: header,
    offset: offset,
    easing: 'easeOutQuad'
  };
  var scr = new SmoothScroll();
  scr.animateScroll(target_block, '', options);
} //SameFunctions


function offset(el) {
  var rect = el.getBoundingClientRect(),
      scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,
      scrollTop = window.pageYOffset || document.documentElement.scrollTop;
  return {
    top: rect.top + scrollTop,
    left: rect.left + scrollLeft
  };
}

function disableScroll() {
  if (window.addEventListener) // older FF
    window.addEventListener('DOMMouseScroll', preventDefault, false);
  document.addEventListener('wheel', preventDefault, {
    passive: false
  }); // Disable scrolling in Chrome

  window.onwheel = preventDefault; // modern standard

  window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE

  window.ontouchmove = preventDefault; // mobile

  document.onkeydown = preventDefaultForScrollKeys;
}

function enableScroll() {
  if (window.removeEventListener) window.removeEventListener('DOMMouseScroll', preventDefault, false);
  document.removeEventListener('wheel', preventDefault, {
    passive: false
  }); // Enable scrolling in Chrome

  window.onmousewheel = document.onmousewheel = null;
  window.onwheel = null;
  window.ontouchmove = null;
  document.onkeydown = null;
}

function preventDefault(e) {
  e = e || window.event;
  if (e.preventDefault) e.preventDefault();
  e.returnValue = false;
}

function preventDefaultForScrollKeys(e) {
  /*if (keys[e.keyCode]) {
  	preventDefault(e);
  	return false;
  }*/
}

function fix_block(scr_fix_block, scr_value) {
  var window_width = parseInt(window.innerWidth);
  var window_height = parseInt(window.innerHeight);
  var header_height = parseInt(document.querySelector('header').offsetHeight) + 15;

  for (var _index3 = 0; _index3 < scr_fix_block.length; _index3++) {
    var block = scr_fix_block[_index3];
    var block_width = block.getAttribute('data-width');
    var item = block.querySelector('._side-block');

    if (!block_width) {
      block_width = 0;
    }

    if (window_width > block_width) {
      if (item.offsetHeight < window_height - (header_height + 30)) {
        if (scr_value > offset(block).top - (header_height + 15)) {
          item.style.cssText = "position:fixed;bottom:auto;top:" + header_height + "px;width:" + block.offsetWidth + "px;left:" + offset(block).left + "px;";
        } else {
          gotoRelative(item);
        }

        if (scr_value > block.offsetHeight + offset(block).top - (item.offsetHeight + (header_height + 15))) {
          block.style.cssText = "position:relative;";
          item.style.cssText = "position:absolute;bottom:0;top:auto;left:0px;width:100%";
        }
      } else {
        gotoRelative(item);
      }
    }
  }

  function gotoRelative(item) {
    item.style.cssText = "position:relative;bottom:auto;top:0px;left:0px;";
  }
}

/***/ }),

/***/ "./src/jsModules/main/modules/sliders.js":
/*!***********************************************!*\
  !*** ./src/jsModules/main/modules/sliders.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var sliderAwardsLaunch = document.querySelectorAll('.slider-awards-launch__container');

if (sliderAwardsLaunch) {
  sliderAwardsLaunch.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'slide-awards-launch',
      slidesPerView: 1,
      speed: 800,
      spaceBetween: 15,
      pagination: {
        el: el.querySelector('.slider-awards-launch__pagging'),
        clickable: true,
        type: 'bullets'
      }
    });
  });
}

; //===================================================================================================================

var slidersReviewsBlock = document.querySelectorAll('.reviews-block__slider');
var mysliderReviewsBlock = [];

if (slidersReviewsBlock) {
  var initialSliderReviewsBlock = function initialSliderReviewsBlock() {
    slidersReviewsBlock.forEach(function (el) {
      mysliderReviewsBlock.push(new Swiper(el, {
        slideClass: 'slide-reviews-block',
        speed: 800,
        loop: true,
        pagination: {
          el: el.querySelector('.reviews-block__pagging'),
          clickable: true,
          type: 'bullets'
        },
        navigation: {
          nextEl: '.reviews-block__arrows .arrow-next',
          prevEl: '.reviews-block__arrows .arrow-prev'
        },
        breakpoints: {
          320: {
            spaceBetween: 31,
            slidesPerView: 1
          },
          600: {
            spaceBetween: 0,
            slidesPerView: 1
          },
          769: {
            slidesPerView: 1.5,
            spaceBetween: 0,
            loopAdditionalSlides: 1
          },
          1025: {
            slidesPerView: 1.8,
            spaceBetween: 0,
            loopAdditionalSlides: 1
          }
        }
      }));
    });
  };

  ;
  initialSliderReviewsBlock();
} //===================================================================================================================


var sliderRatingBlock = document.querySelectorAll('.rating-block__slider');

if (sliderRatingBlock) {
  sliderRatingBlock.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'rating-block__slide',
      slidesPerView: 1,
      speed: 800,
      spaceBetween: 40,
      pagination: {
        el: el.querySelector('.rating-block__pagging'),
        clickable: true,
        type: 'fraction'
      },
      navigation: {
        nextEl: el.querySelector('.rating-block__navigation .arrow-next'),
        prevEl: el.querySelector('.rating-block__navigation .arrow-prev')
      }
    });
  });
}

; //===================================================================================================================

var sliderTeamGallery = document.querySelectorAll('.team-gallery__slider');

if (sliderTeamGallery) {
  sliderTeamGallery.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'team-gallery__slide',
      slidesPerView: 1,
      speed: 800,
      breakpoints: {
        320: {
          spaceBetween: 21
        },
        480: {
          spaceBetween: 0
        }
      },
      navigation: {
        nextEl: el.querySelector('.team-gallery__arrows .arrow-next'),
        prevEl: el.querySelector('.team-gallery__arrows .arrow-prev')
      }
    });
  });
}

; //===================================================================================================================

var sliderDiplomasBlock = document.querySelectorAll('.slider-diplomas__container');

if (sliderDiplomasBlock) {
  sliderDiplomasBlock.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'slide-diplomas',
      speed: 800,
      loop: true,
      slidesPerView: "auto",
      pagination: {
        el: el.querySelector('.slider-diplomas__pagging'),
        clickable: true,
        type: 'fraction'
      },
      navigation: {
        nextEl: el.querySelector('.slider-diplomas__nav .arrow-next'),
        prevEl: el.querySelector('.slider-diplomas__nav .arrow-prev')
      },
      breakpoints: {
        320: {
          spaceBetween: 26
        },
        480: {
          spaceBetween: 31
        },
        850: {
          spaceBetween: 21
        }
      }
    });
  });
}

; //===================================================================================================================

var sliderAwardsWins = document.querySelectorAll('.thubms-awards-wins__container');

if (sliderAwardsWins) {
  sliderAwardsWins.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'thubms-awards-wins__slide',
      speed: 1000,
      slidesPerView: 1,
      effect: 'fade',
      // autoplay: {
      // 	delay: 2500,
      // 	disableOnInteraction: true,
      // },
      spaceBetween: 100,
      mousewheel: true,
      pagination: {
        el: el.querySelector('.thubms-awards-wins__pagging'),
        clickable: true,
        type: 'bullets'
      },
      breakpoints: {
        320: {
          autoHeight: true,
          direction: 'horizontal'
        },
        480: {
          autoHeight: true,
          direction: 'vertical'
        }
      },
      thumbs: {
        swiper: {
          el: '.slider-awards-wins__container',
          slideClass: 'slider-awards-wins__slide',
          speed: 1000,
          slidesPerView: 1,
          simulateTouch: false,
          effect: 'fade'
        }
      }
    });
  });
}

; //===================================================================================================================

var slidersExperts = document.querySelectorAll('.team-management__slider');
var myExpertsSwiper = [];

if (slidersExperts) {
  var initialExpertsSlider = function initialExpertsSlider() {
    slidersExperts.forEach(function (el) {
      if (window.innerWidth <= 425) {
        myExpertsSwiper.push(new Swiper(el, {
          slideClass: 'experts-block__column',
          slidesPerView: 1,
          speed: 800,
          spaceBetween: 30,
          navigation: {
            nextEl: '.team-management__arrows .arrow-next',
            prevEl: '.team-management__arrows .arrow-prev'
          },
          pagination: {
            el: '.team-management__pagging',
            clickable: true,
            type: 'fraction'
          }
        }));
      } else if (el.classList.contains('swiper-container-initialized')) {
        myExpertsSwiper.forEach(function (slide) {
          return slide.destroy();
        });
        myExpertsSwiper = [];
      }
    });
  };

  initialExpertsSlider();
  window.addEventListener('resize', function () {
    myExpertsSwiper.forEach(function (slide) {
      return slide.destroy();
    });
    myExpertsSwiper = [];
    initialExpertsSlider();
  });
} //===================================================================================================================


var slidersExpertsBlock = document.querySelectorAll('.experts-block__slider');
var myExpertsBlockSwiper = [];

if (slidersExpertsBlock) {
  var initialExpertsBlockSlider = function initialExpertsBlockSlider() {
    slidersExpertsBlock.forEach(function (el) {
      if (window.innerWidth <= 425) {
        myExpertsBlockSwiper.push(new Swiper(el, {
          slideClass: 'experts-block__column',
          slidesPerView: 1,
          speed: 800,
          spaceBetween: 30,
          navigation: {
            nextEl: '.experts-block__arrows .arrow-next',
            prevEl: '.experts-block__arrows .arrow-prev'
          }
        }));
      } else if (el.classList.contains('swiper-container-initialized')) {
        myExpertsBlockSwiper.forEach(function (slide) {
          return slide.destroy();
        });
        myExpertsBlockSwiper = [];
      }

      ;
    });
  };

  ;
  initialExpertsBlockSlider();
  window.addEventListener('resize', function () {
    myExpertsBlockSwiper.forEach(function (slide) {
      return slide.destroy();
    });
    myExpertsBlockSwiper = [];
    initialExpertsBlockSlider();
  });
} //===================================================================================================================


var slidersPartners = document.querySelectorAll('.partners-slider');
var myPartnersSwiper = [];

if (slidersPartners) {
  var initialPartnersSlider = function initialPartnersSlider() {
    slidersPartners.forEach(function (el) {
      if (window.innerWidth <= 768) {
        myPartnersSwiper.push(new Swiper(el, {
          slideClass: 'partners__slide',
          slidesPerView: 1,
          speed: 800,
          spaceBetween: 30,
          pagination: {
            el: '.partners__pagging',
            clickable: true,
            type: 'bullets'
          }
        }));
      } else if (el.classList.contains('swiper-container-initialized')) {
        myPartnersSwiper.forEach(function (slide) {
          return slide.destroy();
        });
        myPartnersSwiper = [];
      }

      ;
    });
  };

  ;
  initialPartnersSlider();
  window.addEventListener('resize', function () {
    initialPartnersSlider();
  });
} //===================================================================================================================


var slidersPortfolioInside = document.querySelectorAll('.portfolio-inside__slider');
var myInsideSwiper = [];

if (slidersPortfolioInside) {
  var initialInsideSlider = function initialInsideSlider() {
    slidersPortfolioInside.forEach(function (el) {
      if (window.innerWidth <= 599) {
        myInsideSwiper.push(new Swiper(el, {
          slideClass: 'slide-portfolio-inside',
          slidesPerView: 1,
          speed: 800,
          effect: "fade",
          autoHeight: true,
          loop: true,
          navigation: {
            nextEl: el.querySelector('.portfolio-inside__arrow-next'),
            prevEl: el.querySelector('.portfolio-inside__arrow-prev')
          }
        }));
      } else if (el.classList.contains('swiper-container-initialized')) {
        myInsideSwiper.forEach(function (slide) {
          return slide.destroy();
        });
        myInsideSwiper = [];
      }

      ;
    });
  };

  ;
  initialInsideSlider();
  window.addEventListener('resize', function () {
    myInsideSwiper.forEach(function (slide) {
      return slide.destroy();
    });
    myInsideSwiper = [];
    initialInsideSlider();
  });
} //===================================================================================================================


var slidersAchievements = document.querySelectorAll('.achievements__slider');
var myAchievementsSwiper = [];

if (slidersAchievements) {
  var initialAchievementsSlider = function initialAchievementsSlider() {
    slidersAchievements.forEach(function (el) {
      if (window.innerWidth <= 649) {
        myAchievementsSwiper.push(new Swiper(el, {
          slideClass: 'achievements__column',
          slidesPerView: 1,
          speed: 800,
          spaceBetween: 40,
          loop: true,
          navigation: {
            nextEl: el.querySelector('.achievements__arrow-next'),
            prevEl: el.querySelector('.achievements__arrow-prev')
          }
        }));
      } else if (el.classList.contains('swiper-container-initialized')) {
        myAchievementsSwiper.forEach(function (slide) {
          return slide.destroy();
        });
        myAchievementsSwiper = [];
      }
    });
  };

  initialAchievementsSlider();
  window.addEventListener('resize', function () {
    myAchievementsSwiper.forEach(function (slide) {
      return slide.destroy();
    });
    myAchievementsSwiper = [];
    initialAchievementsSlider();
  });
} //===================================================================================================================


var slidersMainTeam = document.querySelectorAll('.slider-main-team__container');
var myMainTeamSwiper = [];

if (slidersMainTeam) {
  var initialMainTeamSlider = function initialMainTeamSlider() {
    slidersMainTeam.forEach(function (el) {
      myMainTeamSwiper.push(new Swiper(el, {
        slideClass: 'slide-main-team',
        speed: 800,
        loop: true,
        breakpoints: {
          320: {
            slidesPerView: 1,
            spaceBetween: 10
          },
          769: {
            slidesPerView: 2,
            spaceBetween: 10
          },
          1025: {
            slidesPerView: 3,
            spaceBetween: 20
          }
        },
        navigation: {
          nextEl: el.querySelector('.slider-main-team__container .arrow-next'),
          prevEl: el.querySelector('.slider-main-team__container .arrow-prev')
        }
      }));
    });
  };

  ;
  initialMainTeamSlider();
} //===================================================================================================================


var mainSuccesSlidersOne = document.querySelector('.slider-main-succes__container--one');
var thumbsSuccesSlidersOne = document.querySelector('.thumbs-main-succes__container--one');

if (mainSuccesSlidersOne) {
  var myThumbsSuccesSlidersOne = new Swiper(thumbsSuccesSlidersOne, {
    // followFinger: false,
    // simulateTouch: false,
    allowTouchMove: false,
    speed: 1000,
    // freeMode: true,
    loop: true,
    // loopPreventsSlide: true,
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    resizeObserver: true,
    // watchOverflow: true,
    // watchSlidesProgress: true,
    // watchSlidesVisibility: true,
    slideClass: 'thumb-main-succes--one',
    breakpoints: {
      320: {
        slidesPerView: 1,
        centeredSlides: false,
        loopAdditionalSlides: 1
      },
      769: {
        centeredSlides: true,
        slidesPerView: 3,
        loopAdditionalSlides: 0
      },
      1281: {
        centeredSlides: true,
        slidesPerView: 5,
        loopAdditionalSlides: 0
      }
    },
    navigation: {
      nextEl: '.thumbs-main-succes__arrows--one .arrow-next',
      prevEl: '.thumbs-main-succes__arrows--one .arrow-prev'
    }
  });
  new Swiper(mainSuccesSlidersOne, {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 1,
    followFinger: false,
    simulateTouch: false,
    speed: 1000,
    autoHeight: true,
    spaceBetween: 50,
    loop: true,
    breakpoints: {
      320: {
        loopAdditionalSlides: 1
      },
      769: {
        loopAdditionalSlides: 0
      }
    },
    // loopAdditionalSlides: 1,
    thumbs: {
      swiper: myThumbsSuccesSlidersOne
    },
    navigation: {
      nextEl: myThumbsSuccesSlidersOne.navigation.nextEl,
      prevEl: myThumbsSuccesSlidersOne.navigation.prevEl
    }
  });
}

; //===================================================================================================================

var mainSuccesSlidersTwo = document.querySelector('.slider-main-succes__container--two');
var thumbsSuccesSlidersTwo = document.querySelector('.thumbs-main-succes__container--two');

if (mainSuccesSlidersTwo) {
  var myThumbsSuccesSlidersTwo = new Swiper(thumbsSuccesSlidersTwo, {
    // followFinger: false,
    // simulateTouch: false,
    allowTouchMove: false,
    speed: 1000,
    // freeMode: true,
    loop: true,
    // loopPreventsSlide: true,
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    resizeObserver: true,
    // watchOverflow: true,
    // watchSlidesProgress: true,
    // watchSlidesVisibility: true,
    slideClass: 'thumb-main-succes--two',
    breakpoints: {
      320: {
        slidesPerView: 1,
        centeredSlides: false,
        loopAdditionalSlides: 1
      },
      769: {
        centeredSlides: true,
        slidesPerView: 3,
        loopAdditionalSlides: 0
      },
      1281: {
        centeredSlides: true,
        slidesPerView: 5,
        loopAdditionalSlides: 0
      }
    },
    navigation: {
      nextEl: '.thumbs-main-succes__arrows--two .arrow-next',
      prevEl: '.thumbs-main-succes__arrows--two .arrow-prev'
    }
  });
  new Swiper(mainSuccesSlidersTwo, {
    observer: true,
    observeParents: true,
    observeSlideChildren: true,
    slidesPerView: 1,
    followFinger: false,
    simulateTouch: false,
    speed: 1000,
    autoHeight: true,
    spaceBetween: 50,
    loop: true,
    breakpoints: {
      320: {
        loopAdditionalSlides: 1
      },
      769: {
        loopAdditionalSlides: 0
      }
    },
    thumbs: {
      swiper: myThumbsSuccesSlidersTwo
    },
    navigation: {
      nextEl: myThumbsSuccesSlidersTwo.navigation.nextEl,
      prevEl: myThumbsSuccesSlidersTwo.navigation.prevEl
    }
  });
}

; //===================================================================================================================

var contextCasesSlider = document.querySelector('.slider-context-cases__container');
var contextCasesThumbs = document.querySelector('.thumbs-context-cases__container');

if (contextCasesThumbs) {
  var myContextCasesThumbs = new Swiper(contextCasesThumbs, {
    // followFinger: false,
    // simulateTouch: false,
    speed: 800,
    // freeMode: true,
    centeredSlides: true,
    loop: true,
    direction: "vertical",
    // observer: true,
    // observeParents: true,
    // observeSlideChildren: true,
    // resizeObserver: true,
    // loopPreventsSlide: true,
    slidesPerView: 'auto',
    slideClass: 'thumb-context-cases',
    navigation: {
      nextEl: '.context-cases__nav .arrow-next',
      prevEl: '.context-cases__nav .arrow-prev'
    }
  });
  new Swiper(contextCasesSlider, {
    // observer: true,
    // observeParents: true,
    // observeSlideChildren: true,
    slideClass: 'slide-context-cases',
    slidesPerView: 1,
    // followFinger: false,
    // simulateTouch: false,
    speed: 800,
    spaceBetween: 50,
    loop: true,
    thumbs: {
      swiper: myContextCasesThumbs
    },
    navigation: {
      nextEl: myContextCasesThumbs.navigation.nextEl,
      prevEl: myContextCasesThumbs.navigation.prevEl
    },
    pagination: {
      el: '.context-cases__fraction',
      clickable: true,
      type: 'fraction'
    }
  });
}

;
var slidersPlanExpert = document.querySelectorAll('.plan-expert__slider');

if (slidersPlanExpert) {
  slidersPlanExpert.forEach(function (el) {
    el = new Swiper(el, {
      slideClass: 'slide-plan-expert',
      speed: 800,
      slidesPerView: 1,
      spaceBetween: 20,
      navigation: {
        nextEl: '.plan-expert__arrows .arrow-next',
        prevEl: '.plan-expert__arrows .arrow-prev'
      }
    });
  });
}

; //==============================================

var complexPlanSlider = document.querySelector('.plan-mobile__slider');
var complexPlanThumbs = document.querySelector('.plan-mobile__thumbs');

if (complexPlanThumbs) {
  var mycomplexPlanThumbs = new Swiper(complexPlanThumbs, {
    speed: 800,
    slidesPerView: 4,
    slideClass: 'plan-mobile__thumb',
    navigation: {
      nextEl: '.plan-mobile__arrows .arrow-next',
      prevEl: '.plan-mobile__arrows .arrow-prev'
    }
  });
  new Swiper(complexPlanSlider, {
    slideClass: 'plan-mobile__slide',
    slidesPerView: 1,
    speed: 800,
    spaceBetween: 30,
    thumbs: {
      swiper: mycomplexPlanThumbs
    },
    navigation: {
      nextEl: mycomplexPlanThumbs.navigation.nextEl,
      prevEl: mycomplexPlanThumbs.navigation.prevEl
    }
  });
}

/***/ }),

/***/ "./src/jsModules/main/modules/tabs.js":
/*!********************************************!*\
  !*** ./src/jsModules/main/modules/tabs.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//Tabs
var tabs = document.querySelectorAll("._tabs");
tabs.forEach(function (tab) {
  var tabsTriggers = tab.querySelectorAll("._tabs__trigger");
  var tabsBlocks = tab.querySelectorAll("._tabs__block");

  var _loop = function _loop(index) {
    var tabsTrigger = tabsTriggers[index];
    tabsTrigger.addEventListener("click", function (e) {
      for (var i = 0; i < tabsTriggers.length; i++) {
        var _tabsTrigger = tabsTriggers[i];

        _tabsTrigger.classList.remove('_open');

        tabsBlocks[i].classList.remove('_open');
      }

      tabsTrigger.classList.add('_open');
      tabsBlocks[index].classList.add('_open');
      e.preventDefault();
    });
  };

  for (var index = 0; index < tabsTriggers.length; index++) {
    _loop(index);
  }
});
var tabsSecond = document.querySelectorAll("._tabs-second");
tabsSecond.forEach(function (tab) {
  var tabsTriggers = tab.querySelectorAll("._tabs-second__trigger");
  var tabsBlocks = tab.querySelectorAll("._tabs-second__block");

  var _loop2 = function _loop2(index) {
    var tabsTrigger = tabsTriggers[index];
    tabsTrigger.addEventListener("click", function (e) {
      for (var i = 0; i < tabsTriggers.length; i++) {
        var _tabsTrigger2 = tabsTriggers[i];

        _tabsTrigger2.classList.remove('_open');

        tabsBlocks[i].classList.remove('_open');
      }

      tabsTrigger.classList.add('_open');
      tabsBlocks[index].classList.add('_open');
      e.preventDefault();
    });
  };

  for (var index = 0; index < tabsTriggers.length; index++) {
    _loop2(index);
  }
});

/***/ }),

/***/ "./src/jsModules/main/modules/tickers.js":
/*!***********************************************!*\
  !*** ./src/jsModules/main/modules/tickers.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// //бегущая строка в шапке
// let mainTicker = document.querySelector('.mainscreen__ticker');
// let tickerM = document.querySelectorAll('.mainscreen__ticker ul');
// if (mainTicker) {
//     tickerM.forEach((ticker) => {
//         headerSlideInit();
//         setInterval(headerSlide, 1);
//         function headerSlideInit() {
//             headerSlideWidth0 = ticker.offsetWidth;
//             headerSlideLeft0 = ticker.offsetLeft;
//         }
//         function headerSlide() {
//             var left = parseInt(ticker.offsetLeft);
//             let tikerUls = document.querySelectorAll('.mainscreen__ticker ul li');
//             tikerUls.forEach((el) => {
//                 var width = el.offsetWidth;
//                 var left = el.offsetLeft;
//                 if (left - 150 < headerSlideLeft0) {
//                     el.classList.add("active");
//                 }
//                 if (left - 150 < headerSlideLeft0 - width || left > headerSlideWidth0) {
//                     el.classList.remove("active");
//                 }
//             });
//         }
//     })
// }
// //бегущая строка в шапке
// function animateMarqueeOne(el, duration) {
//     const innerEl = el.querySelector('.ticker__inner--one');
//     const innerWidth = innerEl.offsetWidth;
//     const cloneEl = innerEl.cloneNode(true);
//     el.appendChild(cloneEl);
//     let start = performance.now();
//     let progress;
//     let translateX;
//     requestAnimationFrame(function step(now) {
//         progress = (now - start) / duration;
//         if (progress > 1) {
//             progress %= 1;
//             start = now;
//         }
//         translateX = innerWidth * progress - innerWidth;
//         // innerEl.style.transform = `translate3d(${translateX}px, 0 , 0)`;
//         // cloneEl.style.transform = `translate3d(${translateX}px, 0 , 0)`;
//         innerEl.style.transform = `translate(${translateX}px, 0)`;
//         cloneEl.style.transform = `translate(${translateX}px, 0)`;
//         requestAnimationFrame(step);
//     });
// }
// const tickerOne = document.querySelector('.ticker--one');
// if (tickerOne) {
//     animateMarqueeOne(tickerOne, 40000);
// }
// function animateMarqueeTwo(el, duration) {
//     const innerEl = el.querySelector('.ticker__inner--two');
//     const innerWidth = innerEl.offsetWidth;
//     const cloneEl = innerEl.cloneNode(true);
//     el.appendChild(cloneEl);
//     let start = performance.now();
//     let progress;
//     let translateX;
//     requestAnimationFrame(function step(now) {
//         progress = (now - start) / duration;
//         if (progress > 1) {
//             progress %= 1;
//             start = now;
//         }
//         translateX = innerWidth * progress;
//         innerEl.style.transform = `translate(-${translateX}px, 0)`;
//         cloneEl.style.transform = `translate(-${translateX}px, 0)`;
//         requestAnimationFrame(step);
//     });
// }
// const tickerTwo = document.querySelector('.ticker--two');
// if (tickerTwo) {
//     animateMarqueeTwo(tickerTwo, 60000);
// };
var tickerWrappers = document.querySelectorAll('.js-ticker');

function animTicker() {
  var _loop = function _loop(index) {
    var ticker = tickerWrappers[index];
    var tickerList = ticker.querySelector('ul');
    var cloneEl = tickerList.cloneNode(true);
    var tickerSpeed = ticker.getAttribute('data-ticker-speed');
    ticker.appendChild(cloneEl);
    var tickerWidth = tickerList.offsetWidth;
    var tickerItems = ticker.querySelectorAll('li');

    var _loop2 = function _loop2(_index) {
      var tickerItem = tickerItems[_index];
      var start = performance.now();
      var progress = void 0;
      var translateX = void 0;
      requestAnimationFrame(function step(now) {
        progress = (now - start) / tickerSpeed;

        if (progress > 1) {
          progress %= 1;
          start = now;
        }

        translateX = tickerWidth * progress;

        if (ticker.hasAttribute('data-ticker-reverse')) {
          tickerItem.style.transform = "translate(".concat(translateX, "px, 0)");
        } else {
          tickerItem.style.transform = "translate(-".concat(translateX, "px, 0)");
        }

        requestAnimationFrame(step);
      });
    };

    for (var _index = 0; _index < tickerItems.length; _index++) {
      _loop2(_index);
    }
  };

  for (var index = 0; index < tickerWrappers.length; index++) {
    _loop(index);
  }
}

if (tickerWrappers) {
  animTicker();
}

/***/ })

/******/ });
//# sourceMappingURL=../maps/main.min.js.map